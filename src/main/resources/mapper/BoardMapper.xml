<?xml version="1.0" encoding="UTF-8" ?>
<!-- mapper DTD 선언 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SQL Mapping -->
<mapper namespace="com.example.board_0914.mapper.board.BoardMapper">
    <!--
    resultType  : select 된 데이터를 반환할 (그릇)을 정해주는것 BoardDTO 객체에 담긴다
    parameterType : 자바에서 int,String 값이 들어올거란걸 인지시켜주고 , 쿼리에서 자바로 보낸 boardNo 사용한다
    -->

    <!--1.조회-->
    <select id="boardDTOList"  resultType="BoardDTO">
        SELECT DISTINCT
                          A.BOARD_NO
                        , A.BOARD_TITLE
                        , A.BOARD_CONTENT
                        , A.BOARD_WRITER
                        , A.BOARD_REGDATE
                        , A.BOARD_VIEWCOUNT
                        , A.BOARD_DELETEYN
                        , A.TOTAL_COUNT
                        , (TOTAL_COUNT+1)-A.ROWNUM AS ROWNUM
                        , B.BOARD_NO_FK, B.DELETE_YN
        FROM(
                SELECT
                         BOARD_NO
                       , BOARD_TITLE
                       , BOARD_CONTENT
                       , BOARD_WRITER
                       , BOARD_REGDATE
                       , BOARD_VIEWCOUNT
                       , BOARD_DELETEYN
                       , COUNT(1) OVER() AS TOTAL_COUNT
                       , (ROW_NUMBER() OVER()) AS ROWNUM
                FROM BOARDLIST WHERE BOARD_DELETEYN = 'N'
                GROUP BY BOARD_NO ORDER BY BOARD_NO DESC
            ) A
            FULL JOIN (SELECT * FROM FILE WHERE DELETE_YN= 'N') B ON A.BOARD_NO = B.BOARD_NO_FK
        WHERE ROWNUM BETWEEN 1 AND 10
        ORDER BY ROWNUM DESC;
    </select>

    <!--2.등록-->
    <insert id="boardWrite" parameterType="BoardDTO" useGeneratedKeys="true" keyProperty="boardNo">
        INSERT INTO BOARDLIST
        (
              BOARD_TITLE
            , BOARD_CONTENT
            , BOARD_WRITER
            , BOARD_REGDATE
            , BOARD_VIEWCOUNT
            , BOARD_PW
            , BOARD_DELETEYN
        ) VALUES (
                   #{boardTitle}
                 , #{boardContent}
                 , #{boardWriter}
                 , NOW()
                 , 0
                 , #{boardPw}
                 , 'N'
                 )
    </insert>

    <!--3.상세-->
    <select id="boardDetail"  parameterType="int" resultType="BoardDTO" >
        SELECT * FROM
        BOARDLIST
        WHERE BOARD_NO = #{boardNo}
    </select>


    <!--4.수정-->
    <update id="boardUpdate" parameterType="BoardDTO">
        UPDATE BOARDLIST
        SET BOARD_MODIDATE = NOW()
          , BOARD_TITLE = #{boardTitle}
          , BOARD_CONTENT = #{boardContent}
        WHERE BOARD_NO = #{boardNo}
    </update>

    <!--5.삭제 실무에선 등록된 회원을 삭제X-->
    <update id="boardDelete" parameterType="BoardDTO">
        UPDATE BOARDLIST SET BOARD_DELETEYN = 'Y'
        WHERE BOARD_NO =#{boardNo}
    </update>

    <!--리스트 선택시 +1-->
    <update id="boardViewCountUpdate" parameterType="int">
        UPDATE BOARDLIST
        SET BOARD_VIEWCOUNT = BOARD_VIEWCOUNT + 1
        WHERE BOARD_NO = #{boardNo}
    </update>

    <!--팝업 비밀번호-->
    <select id="boardPwPop"  parameterType="int" resultType="BoardDTO">
        SELECT BOARD_PW
        FROM BOARDLIST
        WHERE BOARD_NO = #{boardNo}
    </select>

    <!-- List Page CNT-->
    <select id="boardPageAjaxList"  resultType="BoardDTO">
        SELECT DISTINCT
                           A.BOARD_NO
                         , A.BOARD_TITLE
                         , A.BOARD_CONTENT
                         , A.BOARD_WRITER
                         , A.BOARD_REGDATE
                         , A.BOARD_VIEWCOUNT
                         , A.BOARD_DELETEYN
                         , A.TOTAL_COUNT
                         , (TOTAL_COUNT+1)-A.ROWNUM AS ROWNUM
                         , B.BOARD_NO_FK
        FROM
            (
                SELECT BOARD_NO
                        , BOARD_TITLE
                        , BOARD_CONTENT
                        , BOARD_WRITER
                        , BOARD_REGDATE
                        , BOARD_VIEWCOUNT
                        , BOARD_DELETEYN
                        , COUNT(1) OVER() AS TOTAL_COUNT
                        , (ROW_NUMBER() OVER()) AS ROWNUM
                FROM BOARDLIST WHERE BOARD_DELETEYN = 'N'
                    <if test='searchField == "writer" and searchText !=""'>
                         AND BOARD_WRITER LIKE '%'||#{searchText}||'%'
                    </if>
                    <if test='searchField == "title" and searchText !=""'>
                        AND BOARD_TITLE LIKE '%'||#{searchText}||'%'
                    </if>

                    <if test='searchField == "" and searchText !=""'>
                       AND BOARD_TITLE LIKE '%'||#{searchText}||'%'
                    </if>
                GROUP BY BOARD_NO ORDER BY BOARD_NO DESC
            ) A
                FULL JOIN (SELECT * FROM FILE WHERE DELETE_YN = 'N') B ON A.BOARD_NO = B.BOARD_NO_FK
        WHERE ROWNUM BETWEEN #{startRow} AND #{endRow}
        ORDER BY ROWNUM DESC
    </select>

    <!--파일 등록-->
    <insert id="insertBoardFileList" parameterType="FileDTO">
        INSERT INTO FILE
            (
                  BOARD_NO_FK
                , FILE_NAME
                , FILE_PATH
                , FILE_MOUNT
                , delete_YN
            )
        VALUES
                (
                    #{boardNoFk}
                    , #{fileName}
                    , #{filePath}
                    , #{fileMount}
                    , 'N'
                )
    </insert>

    <!--상세정보에 나오는 파일정보 -->
    <select id="selectBoardFileList" parameterType="int" resultType="FileDTO">
        SELECT
                   FILE_NO
                 , BOARD_NO_FK
                 , FILE_NAME
                 , TO_CHAR(ROUND(FILE_MOUNT/1024), 'FM999,999,999') AS FILE_MOUNT
                 , DELETE_YN
        FROM
            FILE
        WHERE
            DELETE_YN = 'N'
            AND
            BOARD_NO_FK = #{boardNo}
	</select>
</mapper>