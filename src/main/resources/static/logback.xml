<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">

    <!--<springProperty name="profileActive" source="spring.profiles.active" defaultValue="test"/>
    <springProperty name="logPath" source="logging.file.path" defaultValue="/var/log/tomcat/test"/>-->
    <!--<springProperty name="logLevel" source="logging.level.root" defaultValue="INFO"/>-->

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){green} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8" />

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>${CONSOLE_LOG_CHARSET}</charset>
        </encoder>
    </appender>

    <!-- test 경우 로그파일을 남기지 않는다. -->
    <!--    <if condition='"${profileActive}".equals("test")'>-->
    <then/>
    <else>
        <!--            <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--                <file>${logPath}/spring.log</file>-->
        <!--                &lt;!&ndash; file property left unset/blank &ndash;&gt;-->
        <!--                <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
        <!--                    <fileNamePattern>spring.%d{yyyy-MM-dd}.log</fileNamePattern>-->
        <!--                    <maxHistory>7</maxHistory>-->
        <!--                    <totalSizeCap>3GB</totalSizeCap>-->
        <!--                </rollingPolicy>-->

        <!--                <encoder>-->
        <!--                    <pattern>${CONSOLE_LOG_PATTERN}</pattern>-->
        <!--                    <charset>${CONSOLE_LOG_CHARSET}</charset>-->
        <!--                </encoder>-->
        <!--            </appender>-->
        <!--            <root level="${logLevel}">-->
        <!--                <appender-ref ref="FILE" />-->
        <!--            </root>-->
    </else>
    <!--    </if>-->

    <appender name="ATOMIKOS" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>${CONSOLE_LOG_CHARSET}</charset>
        </encoder>
    </appender>

    <!-- log4jdbc 옵션 설정 -->
    <logger name="jdbc" level="OFF" />
    <!-- 커넥션 open close 이벤트를 로그로 남긴다. -->
    <logger name="jdbc.connection" level="OFF" />
    <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
    <logger name="jdbc.sqlonly" level="INFO" />
    <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
    <logger name="jdbc.sqltiming" level="OFF" />
    <!--
        ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다.
        많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다.
    -->
    <logger name="jdbc.audit" level="OFF" />
    <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
    <logger name="jdbc.resultset" level="OFF" />
    <!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
    <logger name="jdbc.resultsettable" level="INFO" />

    <logger name="com.zaxxer.hikari.pool.HikariPool" level="OFF"/>
    <logger name="com.zaxxer.hikari.pool.PoolBase" level="OFF"/>
    <logger name="org.apache.catalina.startup.DigesterFactory" level="ERROR" />
    <logger name="org.apache.catalina.util.LifecycleBase" level="ERROR" />
    <logger name="org.apache.coyote.http11.Http11NioProtocol" level="WARN" />
    <logger name="org.apache.sshd.common.util.SecurityUtils" level="WARN" />
    <logger name="org.apache.tomcat.util.net.NioSelectorPool" level="WARN" />
    <logger name="org.eclipse.jetty.util.component.AbstractLifeCycle" level="ERROR" />
    <logger name="org.hibernate.validator.internal.util.Version" level="WARN" />
    <logger name="org.springframework.boot.actuate.endpoint.jmx" level="WARN" />
    <logger name="org.springframework.web.servlet.DispatcherServlet" level="INFO" />
    <logger name="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" level="WARN" />
    <logger name="org.springframework.security.web.util.matcher.AntPathRequestMatcher" level="WARN" />
    <logger name="org.springframework.security.web.util.matcher.MediaTypeRequestMatcher" level="WARN" />
    <logger name="org.springframework.security.web.util.matcher.AndRequestMatcher" level="WARN" />
    <logger name="org.springframework.security.web.util.matcher.NegatedRequestMatcher" level="WARN" />
    <logger name="org.springframework.security.web.util.matcher.OrRequestMatcher" level="WARN" />
    <logger name="org.springframework.security.web.savedrequest.DefaultSavedRequest" level="WARN" />
    <logger name="org.springframework.security.web.FilterChainProxy" level="WARN" />
    <logger name="org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener" level="WARN" />
    <logger name="org.apache.commons.digester.Digester" level="OFF" />

    <root level="DEBUG">
        <appender-ref ref="CONSOLE" />
    </root>

    <!-- NOTE: logback does not support FATAL, only ERROR, WARN, INFO, DEBUG and TRACE -->
    <logger name="com.atomikos" level="DEBUG">
        <appender-ref ref="ATOMIKOS" />
    </logger>

</configuration>